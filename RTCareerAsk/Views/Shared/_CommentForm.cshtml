@model RTCareerAsk.Models.CommentPostModel

@using (Ajax.BeginForm("PostComment", "Question", new { }, new AjaxOptions
{
    LoadingElementId = "divInfoLoading",
    HttpMethod = "Post",
    UpdateTargetId = string.Format("ulCmtList{0}", Model.AnswerID),
    OnBegin = "OnCmtBegin",
    OnSuccess = string.Format("OnCmtSuccess('{0}')", Model.AnswerID),
    OnComplete = "OnCmtComplete",
    OnFailure = "OnCmtFailure"
}, new { id = string.Format("formCmt{0}", Model.AnswerID), style = "padding-left: 40px; padding-right: 22px" }))
{
    @Html.HiddenFor(model => model.AnswerID)
    @Html.HiddenFor(model => model.QuestionTitle)
    @Html.HiddenFor(model => model.AuthorID)
    @Html.HiddenFor(model => model.NotifyUserID)
    <div class="comment-form">
        @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "validation-msg" })
        @Html.TextAreaFor(model => model.PostContent, new { rows = 4 })
        <div class="word-count">字数：<span class="existed">0</span>/<span class="max">500</span></div>
        <div class="button-wrap">
            <input type="submit" value="提交" class="btn btn-link btn-block" />
        </div>
        <script type="text/javascript">
            $('.word-count').siblings('textarea').keyup(function () {
                var length = $(this).val().length,
                    wordCountBadge = $(this).siblings('.word-count'),
                    maxLength = parseInt(wordCountBadge.children('.max').text());
                $(this).siblings('.word-count').children('.existed').text(length);
                if (length > maxLength && !wordCountBadge.hasClass('oversized')) {
                    wordCountBadge.addClass('oversized')
                }
                else if (length <= maxLength && wordCountBadge.hasClass('oversized')) {
                    wordCountBadge.removeClass('oversized')
                }
            })
        </script>
    </div>
@*<div class="form-group" style="padding-left: 22px;">
        <div class="col-lg-12">
            @Html.TextAreaFor(model => model.PostContent, new { style = "width:100%", rows = "4", placeholder = "请在此输入评论内容" })
            <span class="validate">@Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "validation-msg" })</span>
        </div>
    </div>
    <div>
        <div class="float-right">
            <ul class="breadcrumb">
                <li>
                    <button type="submit" class="btn btn-link">提交</button>
                </li>
            </ul>
        </div>
    </div>*@
}
